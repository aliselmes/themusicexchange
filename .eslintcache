[{"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/InstructorsComponent.js":"1","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/HomeComponent.js":"2","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/MainComponent.js":"3","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/GearDirectoryComponent.js":"4","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/GearInfoComponent.js":"5","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/InstructorInfoComponent.js":"6","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/shared/instructors.js":"7","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/ActionTypes.js":"8","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/ActionCreators.js":"9","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/gigs.js":"10","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/FindGigsComponent.js":"11","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/index.js":"12","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/configureStore.js":"13","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/items.js":"14","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/FooterComponent.js":"15","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/ContactComponent.js":"16","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/musicians.js":"17","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/instructors.js":"18","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/AboutComponent.js":"19","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/FindMusiciansComponent.js":"20","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/shared/items.js":"21","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/App.js":"22","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/RenderDirectoryItem.js":"23","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/HeaderComponent.js":"24","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/auth.js":"25","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/shared/baseUrl.js":"26","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/reportWebVitals.js":"27"},{"size":2661,"mtime":1609381586511,"results":"28","hashOfConfig":"29"},{"size":2363,"mtime":1609530528617,"results":"30","hashOfConfig":"29"},{"size":3315,"mtime":1614908054206,"results":"31","hashOfConfig":"29"},{"size":1892,"mtime":1609372399346,"results":"32","hashOfConfig":"29"},{"size":17446,"mtime":1609379250318,"results":"33","hashOfConfig":"29"},{"size":8933,"mtime":1609382391240,"results":"34","hashOfConfig":"29"},{"size":1485,"mtime":1609380767201,"results":"35","hashOfConfig":"29"},{"size":460,"mtime":1614907210011,"results":"36","hashOfConfig":"29"},{"size":5207,"mtime":1614909960991,"results":"37","hashOfConfig":"29"},{"size":1138,"mtime":1609530826645,"results":"38","hashOfConfig":"29"},{"size":7450,"mtime":1609530885065,"results":"39","hashOfConfig":"29"},{"size":639,"mtime":1606681098300,"results":"40","hashOfConfig":"29"},{"size":611,"mtime":1614907520948,"results":"41","hashOfConfig":"29"},{"size":179,"mtime":1608765833848,"results":"42","hashOfConfig":"29"},{"size":2546,"mtime":1607399030528,"results":"43","hashOfConfig":"29"},{"size":11604,"mtime":1608661443252,"results":"44","hashOfConfig":"29"},{"size":1450,"mtime":1614907190773,"results":"45","hashOfConfig":"29"},{"size":151,"mtime":1609369239688,"results":"46","hashOfConfig":"29"},{"size":1762,"mtime":1608001419683,"results":"47","hashOfConfig":"29"},{"size":6395,"mtime":1614909247618,"results":"48","hashOfConfig":"29"},{"size":5312,"mtime":1607890373972,"results":"49","hashOfConfig":"29"},{"size":566,"mtime":1608657693212,"results":"50","hashOfConfig":"29"},{"size":892,"mtime":1608083901295,"results":"51","hashOfConfig":"29"},{"size":7440,"mtime":1614906217375,"results":"52","hashOfConfig":"29"},{"size":1604,"mtime":1614442623890,"results":"53","hashOfConfig":"29"},{"size":49,"mtime":1614442905309,"results":"54","hashOfConfig":"29"},{"size":362,"mtime":1606680428258,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"3ms1k9",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/InstructorsComponent.js",["123"],"import React, { Component } from 'react';\nimport { Card, CardBody, CardTitle, CardSubtitle, CardImg, CardImgOverlay, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nfunction RenderInstructor({item}) {\n    return(\n        <Card id=\"instructor-card\">\n            <Link to={`/instructors/${item.id}`}>\n                <CardImg width=\"100%\" src={item.image} alt={item.name} img-fluid className=\"instructor-img\"></CardImg>\n                <CardBody>\n                    <CardTitle tag=\"h4\" style={{color: \"#D77A61\"}}>{item.name}</CardTitle>\n                    <CardSubtitle className=\"mb-1\" style={{color: \"#223843\"}}><strong>{item.instrument}</strong></CardSubtitle>\n                    <CardSubtitle style={{color: \"#223843\"}}>{item.location}</CardSubtitle>\n                </CardBody>\n            </Link>\n        </Card>\n    );\n}\n\n\nclass Instructors extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search: ''\n        };\n    }\n\n    updateSearch(event) {\n        this.setState({search: event.target.value});\n    }\n\n\n        \n\n    render() {\n\n        console.log(this.props.instructors)\n        let filteredItems = this.props.instructors.instructors.filter(\n            (item) => {\n                return item.location.toLowerCase().indexOf(this.state.search.toLowerCase()) !==-1 ;\n            }\n        ) ;\n\n        return(\n            <div className=\"container my-5\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h2>Find Instructors</h2>\n                    </div>\n                </div>\n                <hr />\n                <div className=\"row mb-3\">\n                    <div className=\"col-md-4\">\n                        <Form>\n                            <FormGroup>\n                                <Label htmlFor=\"location\">Search your community:</Label>\n                                <Input type=\"text\" placeholder=\"Enter town/city\"\n                                    value={this.state.search}\n                                    onChange={this.updateSearch.bind(this)}\n                                />\n                            </FormGroup>   \n                        </Form>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {filteredItems.map(item => \n                    <div className=\"col-12 col-md-6 col-lg-3 mb-2\">\n                        <RenderInstructor item={item} key={item.id}/>\n                    </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Instructors;",["124","125"],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/HomeComponent.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/MainComponent.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/GearDirectoryComponent.js",[],["126","127"],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/GearInfoComponent.js",["128","129","130","131","132","133","134","135","136","137"],"import React, { Component } from 'react';\nimport { Media, ButtonGroup, Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\n\nfunction RenderGearItem({item}) {\n    return (\n        <div className=\"col my-5\">\n            \n            <Media>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-4 mb-4\">\n                        <Media left >\n                            <Media object width=\"100%\" src={item.image} alt={item.name} />\n                        </Media>\n                    </div>\n                    <div className=\"col-12 col-md-8\">\n                        <Media body>\n                            <Media heading id=\"item-heading\">\n                                {item.name}\n                            </Media>\n                            <p>$ {item.price}</p>\n                            {item.trade ? <p className=\"text-success\">Trades Accepted</p> : <p className=\"text-danger\">No Trades</p> }\n                            <p className=\"text-muted\">Category: {item.category}</p>\n                            <p className=\"text-muted\">Location: {item.location}</p>\n                            <p>{item.description}</p>\n                        </Media>\n                    </div>\n                </div>\n            </Media>\n        </div>\n    );\n}\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\nconst isNumber = val => !isNaN(+val);\n\nclass GearItemInfo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.toggleTradeModal = this.toggleTradeModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleTradeSubmit = this.handleTradeSubmit.bind(this);\n\n        this.state = {\n            isModalOpen: false,\n            isTradeModalOpen: false,\n            yourname: '',\n            youremail: '',\n            yourmessage: '',\n            tradeitem: '',\n            tradevalue: '',\n            tradeitemdescription: '',\n            touched: {\n                yourname: false,\n                youremail: false,\n                yourmessage: false,\n                tradeitem: false,\n                tradevalue: false,\n                tradeitemdescription: false\n            },\n            isSubmitted: false,\n        };\n\n    }\n\n\n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        this.toggleModal();\n        {/*alert(\"Current state is: \" + JSON.stringify(this.state));*/}\n        this.setState({\n            isSubmitted: true\n        });\n    }\n\n    handleTradeSubmit() {\n        this.toggleTradeModal();\n    }\n\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n        console.log(this.state.isModalOpen)\n    }\n\n    toggleTradeModal() {\n        this.setState({\n            isTradeModalOpen: !this.state.isTradeModalOpen\n        });\n        console.log(this.state.isTradeModalOpen)\n    } \n\n   \n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    {\n                    this.props.item\n                    ?\n                    <div className=\"row\">\n                        <RenderGearItem item={this.props.item} />\n                    </div>  \n                    :\n                    <div></div>  \n                    }\n                    <div className=\"row\">\n                        <div className=\"col\">\n                                <Button id=\"buy-btn\"><i class=\"fa fa-dollar\"></i> Buy</Button>\n                                             \n                                <Button onClick={this.toggleModal} id=\"message-seller-btn\" className=\"mx-2\"><i className=\"fa fa-envelope\" ></i> Message Seller</Button>\n                               \n                                {this.props.item.trade ?        \n                                <Button onClick={this.toggleTradeModal} className=\"mt-3 mt-sm-0\" id=\"trade-btn\"><i className=\"fa fa-exchange\"></i> Trade</Button>  \n                                :\n                                <div></div>\n                                }   \n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col my-5\">\n                            <Link to=\"/geardirectory\">\n                                <Button><i class=\"fa fa-chevron-left\"></i> Back</Button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col mb-5\">\n                            <h4>Have questions or comments? <Link to=\"/contactus\" className=\"text-info\">Contact us!</Link></h4>\n                        </div>\n                    </div>\n                </div>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                        <ModalHeader toggle={this.toggleModal}>Message Seller</ModalHeader>\n                        <ModalBody>\n                            <LocalForm onSubmit={this.handleSubmit}>\n                                <div className=\"form-group\">\n                                    <Label htmlFor=\"yourname\">Your Name</Label>   \n                                    <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(20)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".yourname\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 20 characters or less'\n                                        }}    \n                                    />   \n                                </div>\n\n                                <div className=\"form-group\">\n                                    <Label htmlFor=\"youremail\">Your Email</Label>   \n                                        <Control.text model=\".youremail\" id=\"youremail\" name=\"youremail\"\n                                            placeholder=\"Your Email\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required,\n                                                validEmail\n                                            }}\n                                        />\n                                        <Errors  \n                                        className=\"text-danger\"\n                                        model=\".youremail\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}   \n                                    />   \n                                </div>\n\n                                <div className=\"form-group\">\n                                    <Label htmlFor=\"yourmessage\">Your Message</Label>\n                                    <Control.textarea model=\".yourmessage\" id=\"yourmessage\" name=\"yourmessage\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(20),\n                                            maxLength: maxLength(500)\n                                        }}\n                                    />\n                                    <Errors  \n                                        className=\"text-danger\"\n                                        model=\".yourmessage\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 20 characters',\n                                            maxLength: 'Must be 500 characters or less'\n                                        }}   \n                                    />  \n                                </div>\n\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Send</Button>\n                            </LocalForm>\n                            {this.state.isSubmitted ? <p className=\"mt-2 text-success\">Message Sent!</p> : <div></div>}\n                        </ModalBody>\n                </Modal>\n\n                <Modal isOpen={this.state.isTradeModalOpen} toggle={this.toggleTradeModal}>\n                        <ModalHeader toggle={this.toggleTradeModal}>Offer a Trade</ModalHeader>\n                        <ModalBody>\n                            <LocalForm onSubmit={this.handleTradeSubmit}>\n                                <div className=\"form-group\">\n                                    <Label htmlFor=\"yourname\">Your Name</Label>   \n                                    <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(20)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".yourname\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 20 characters or less'\n                                        }}    \n                                    />   \n                                </div>\n\n                                <div className=\"form-group\">\n                                    <Label htmlFor=\"youremail\">Your Email</Label>   \n                                        <Control.text model=\".youremail\" id=\"youremail\" name=\"youremail\"\n                                            placeholder=\"Your Email\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required,\n                                                validEmail\n                                            }}\n                                        />\n                                        <Errors  \n                                        className=\"text-danger\"\n                                        model=\".youremail\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}   \n                                    />   \n                                </div>\n\n                                <div className=\"form-group\">\n                                    <Label htmlFor=\"tradeitem\">Trade Item</Label>\n                                    <Control.text model=\".tradeitem\" id=\"tradeitem\" name=\"tradeitem\"\n                                        className=\"form-control\"\n                                        placeholder=\"What item are you offering to trade?\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(20)\n                                        }}\n                                    />\n                                    <Errors  \n                                        className=\"text-danger\"\n                                        model=\".tradeitem\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 20 characters or less'\n                                        }}   \n                                    />  \n                                </div>\n\n                                <div className=\"form-group\">\n                                    <Label htmlFor=\"tradevalue\">Trade Item Estimated Value</Label>\n                                    <Control.text model=\".tradevalue\" id=\"tradevalue\" name=\"tradevalue\"\n                                        className=\"form-control\"\n                                        placeholder=\"Enter a USD ($) amount\"\n                                        validators={{\n                                            required,\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors  \n                                        className=\"text-danger\"\n                                        model=\".tradevalue\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            isNumber: 'Must be a number'\n                                        }}   \n                                    />  \n                                </div>\n\n                                <div className=\"form-group\">\n                                    <Label htmlFor=\"tradeitemdescription\">Trade Item Description</Label>\n                                    <Control.textarea model=\".tradeitemdescription\" id=\"tradeitemdescription\" name=\"tradeitemdescription\"\n                                        rows=\"12\"\n                                        placeholder=\"Please describe the item you are offering to trade: Age, Condition, etc.\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(20),\n                                            maxLength: maxLength(500)\n                                        }}\n                                    />\n                                    <Errors  \n                                        className=\"text-danger\"\n                                        model=\".tradeitemdescription\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 20 characters',\n                                            maxLength: 'Must be 500 characters or less'\n                                        }}   \n                                    />  \n                                </div>\n\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Send</Button>\n                            </LocalForm>\n                            {this.state.isSubmitted ? <p className=\"mt-2 text-success\">Message Sent!</p> : <div></div>}\n                        </ModalBody>\n                </Modal>\n\n\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default GearItemInfo;",["138","139"],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/InstructorInfoComponent.js",["140","141","142","143"],"import React, { Component } from 'react';\nimport { Media, Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\nfunction RenderInstructorInfo({instructor}) {\n    return (\n        <div className=\"col my-5\">\n            \n            <Media>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-4 mb-4\">\n                    <Media left >\n                        <Media object width=\"100%\" src={instructor.image} alt={instructor.name} />\n                    </Media>\n                </div>\n                <div className=\"col-12 col-md-8\">\n                    <Media body>\n                        <Media heading id=\"item-heading\">\n                            {instructor.name}\n                        </Media>\n                        <p><strong>{instructor.instrument}</strong></p>\n                        <p className=\"text-muted\">Location: {instructor.location}</p>\n                        <p className=\"text-muted\">Rate: ${instructor.rate}/hour</p>\n                        {instructor.online === true ? <p className=\"text-success\"><i className=\"fa fa-laptop\"></i> Online Instruction Available</p> : <p className=\"text-danger\">Online Instruction Unavailable</p>}\n                        <h5>About {instructor.name}:</h5>\n                        <p>{instructor.description}</p>\n                    </Media>\n                </div>\n            </div>\n            </Media>\n        </div>\n\n    );\n}\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass InstructorInfo extends Component {\n    constructor(props){\n        super(props);\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            isModalOpen: false,\n            yourname: '',\n            youremail: '',\n            yourmessage: '',\n            touched: {\n                yourname: false,\n                youremail: false,\n                yourmessage: false,\n            },\n        };\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        this.toggleModal();\n        {/*alert(\"Current state is: \" + JSON.stringify(this.state));*/}\n        this.setState({\n            isSubmitted: true\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n        console.log(this.state.isModalOpen)\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    {\n                        this.props.instructor\n                        ?\n                        <div className=\"row\">\n                            <RenderInstructorInfo instructor={this.props.instructor} />\n                        </div>  \n                        :\n                        <div></div>  \n                    }\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <Button onClick={this.toggleModal} id=\"message-instructor-btn\" ><i className=\"fa fa-envelope\" ></i> Message {this.props.instructor.name}</Button>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                            <div className=\"col my-5\">\n                                <Link to=\"/instructors\">\n                                    <Button><i class=\"fa fa-chevron-left\"></i> Back</Button>\n                                </Link>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col mb-5\">\n                                <h4>Have questions or comments? <Link to=\"/contactus\" className=\"text-info\">Contact us!</Link></h4>\n                            </div>\n                        </div>\n                </div>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                        <ModalHeader toggle={this.toggleModal}>Message {this.props.instructor.name}</ModalHeader>\n                        <ModalBody>\n                            <LocalForm onSubmit={this.handleSubmit}>\n                                <div className=\"form-group\">\n                                    <Label htmlFor=\"yourname\">Your Name</Label>   \n                                    <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(20)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".yourname\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 20 characters or less'\n                                        }}    \n                                    />   \n                                </div>\n\n                                <div className=\"form-group\">\n                                    <Label htmlFor=\"youremail\">Your Email</Label>   \n                                        <Control.text model=\".youremail\" id=\"youremail\" name=\"youremail\"\n                                            placeholder=\"Your Email\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required,\n                                                validEmail\n                                            }}\n                                        />\n                                        <Errors  \n                                        className=\"text-danger\"\n                                        model=\".youremail\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}   \n                                    />   \n                                </div>\n\n                                <div className=\"form-group\">\n                                    <Label htmlFor=\"yourmessage\">Your Message</Label>\n                                    <Control.textarea model=\".yourmessage\" id=\"yourmessage\" name=\"yourmessage\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(20),\n                                            maxLength: maxLength(500)\n                                        }}\n                                    />\n                                    <Errors  \n                                        className=\"text-danger\"\n                                        model=\".yourmessage\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 20 characters',\n                                            maxLength: 'Must be 500 characters or less'\n                                        }}   \n                                    />  \n                                </div>\n\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Send</Button>\n                            </LocalForm>\n                            {this.state.isSubmitted ? <p className=\"mt-2 text-success\">Message Sent!</p> : <div></div>}\n                        </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n    \n}\n\nexport default InstructorInfo;",["144","145"],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/shared/instructors.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/ActionTypes.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/ActionCreators.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/gigs.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/FindGigsComponent.js",["146","147","148","149","150","151","152","153"],"import React, { Component } from 'react';\nimport { Button, Label, Card, CardText, CardTitle, UncontrolledCollapse } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nclass Gigs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state={\n            venue: '',\n            yourLocation: '',\n            date: '',\n            time: '',\n            yourEmail: '',\n            details: '',\n            search: ''\n        };\n    }\n\n    handleSubmit() {\n        if (this.state.venue.length > 0 && this.state.yourLocation.length > 0 && this.state.date.length > 0 && this.state.time.length > 0 && this.state.yourEmail.length > 0 && this.state.details.length > 0) {\n            this.props.addGig(this.state.venue, this.state.yourLocation, this.state.date, this.state.time, this.state.yourEmail, this.state.details);\n            this.setState({venue: '', yourLocation: '', date: '', time: '', yourEmail: '', details: ''})\n        }\n    }\n\n    updateSearch(event) {\n        this.setState({search: event.target.value});\n    }\n\n\n    render() {\n        console.log(this.props.gigs);\n\n        let filteredItems = this.props.gigs.gigs.filter(\n            (item) => {\n                return item.location.toLowerCase().indexOf(this.state.search.toLowerCase()) !==-1 ;\n            }\n        ) ;\n\n        return (\n            <div className=\"container my-5\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h2>Find Gigs</h2>\n                    </div>\n                </div>\n                <hr />\n                <div className=\"row mb-5\">\n                    <div className=\"col-12 col-md-6\">\n                        <Button id=\"addgigtoggler\">Click here to add a gig</Button>\n                        <UncontrolledCollapse toggler=\"#addgigtoggler\">\n                        <LocalForm className=\"mt-3\">\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"title\">Venue</Label>\n                                <Control.text id=\"venue\" name=\"venue\"\n                                    model=\".venue\"\n                                    className=\"form-control\"\n                                    placeholder=\"Venue Name\"\n                                    onChange={(e) => this.setState({ venue: e.target.value })}\n                                    value={this.state.venue}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"location\">Location</Label>\n                                <Control.text id=\"location\" name=\"location\"\n                                    model=\".location\"\n                                    className=\"form-control\"\n                                    placeholder=\"e.g. New York, NY\"\n                                    onChange={(e) => this.setState({ yourLocation: e.target.value })}\n                                    value={this.state.yourLocation}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"gigdate\">Date</Label>\n                                <Control.text id=\"gigdate\" name=\"gigdate\"\n                                    model=\".gigdate\"\n                                    className=\"form-control\"\n                                    placeholder=\"e.g. 5/4/21\"\n                                    onChange={(e) => this.setState({ date: e.target.value })}\n                                    value={this.state.date}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"gigtime\">Time</Label>\n                                <Control.text id=\"gigtime\" name=\"gigtime\"\n                                    model=\".gigtime\"\n                                    className=\"form-control\"\n                                    placeholder=\"e.g. 19:30\"\n                                    onChange={(e) => this.setState({ time: e.target.value })}\n                                    value={this.state.time}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"email\">Venue Email</Label>\n                                <Control.text id=\"email\" name=\"email\"\n                                    model=\".email\"\n                                    className=\"form-control\"\n                                    placeholder=\"e.g. example@example.com\"\n                                    onChange={(e) => this.setState({ yourEmail: e.target.value })}\n                                    value={this.state.yourEmail}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"details\">Details</Label>\n                                <Control.textarea id=\"details\" name=\"details\"\n                                    model=\".details\"\n                                    className=\"form-control\"\n                                    placeholder=\"Provide details\"\n                                    rows=\"5\"\n                                    onChange={(e) => this.setState({ details: e.target.value })}\n                                    value={this.state.details}\n                                />\n                            </div>\n                            <Button onClick={() => this.handleSubmit()} type=\"submit\" value=\"submit\">Add Gig</Button>\n                        </LocalForm>\n                        </UncontrolledCollapse>\n                    </div>\n                    <div className=\"col col-md-2\">\n\n                    </div>\n                    <div className=\"col-12 col-md-4 text-md-right mt-5 mt-md-0\">\n                        <LocalForm>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"location\">Search your community:</Label>\n                                <Control.text model=\".search\" id=\"search\" name=\"search\" placeholder=\"Enter town/city\"\n                                    className=\"form-control\"\n                                    value={this.state.search}\n                                    onChange={this.updateSearch.bind(this)}\n                                />\n                            </div>   \n                        </LocalForm>\n                    </div>\n                </div>                  \n                        {filteredItems.map( item =>\n                        <div className=\"row my-3\">\n                            <div className=\"col\">\n                                <Card body id=\"gig-card\">\n                                    <CardTitle tag=\"h4\">{item.venue}</CardTitle>\n                                    <CardText><strong>{item.location}</strong> - {item.date} - {item.time}</CardText> \n                                    <CardText>{item.email}</CardText>    \n                                    <CardText>{item.details}</CardText>\n                                </Card>\n                            </div>\n                        </div>\n                        )}                \n            </div>\n        );\n    }\n\n}\n\nexport default Gigs;","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/index.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/configureStore.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/items.js",["154"],"import { ITEMS } from '../shared/items';\n\n{/*export const initialState = {\n    items: ITEMS\n}; */}\n\nexport const Items = (state = {items: ITEMS}, action) => {\n    return state;\n};",["155","156"],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/FooterComponent.js",["157"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return (\n        <footer className=\"site-footer\">\n            <div className=\"container\">\n                <div className=\"row\">             \n                    <div className=\"col-12 col-md-4 order-3 order-md-1\">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center text-md-left\">\n                                123 Some Street <br />\n                                Some Town <br />\n                                ZC 12345\n                            </div>\n                            <div className=\"col-12 text-center text-md-left p-0\">\n                                <a role=\"button\" className=\"btn btn-link\" href=\"\"><i className=\"fa fa-phone\" /> 1-123-456-7890</a><br />\n                                <a role=\"button\" className=\"btn btn-link\" href=\"mailto:notreal@notreal.co\"><i className=\"fa fa-envelope-o\" /> info@themusicexchange.com</a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-md-4 text-center my-3 my-md-0 order-2\">\n                        <a className=\"btn btn-social-icon btn-instagram\" href=\"http://instagram.com/\"><i className=\"fa fa-instagram\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/\"><i className=\"fa fa-facebook\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\" /></a>\n                    </div>\n                    <div className=\"col-12 col-md-4 text-center text-md-right order-1 order-md-3\">\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li className=\"my-1\"><Link to='/geardirectory'>Browse Gear</Link></li>\n                            <li className=\"my-1\"><Link to='/musicians'>Find Musicians</Link></li>\n                            <li className=\"my-1\"><Link to='/gigs'>Gigs</Link></li>\n                            <li className=\"my-1\"><Link to='/instructors'>Instructors</Link></li>\n                            <li className=\"my-1\"><Link to='/aboutus'>About</Link></li>\n                            <li><Link to='/contactus'>Contact</Link></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/ContactComponent.js",["158","159","160","161","162","163","164","165"],"import React, { Component } from 'react';\nimport { Button, Label, Col, Row} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            },\n            isSubmitted: false\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        alert(\"Current state is: \" + JSON.stringify(values));\n        this.setState ({\n            isSubmitted: true\n        });\n    }\n\n    render() {\n\n\n        return (\n            <div className=\"container\" id=\"contact-container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-12 col-md-4 \">\n                        <h5>Our Address</h5>\n                        <address>\n                            Some Street<br />\n                            Some Town<br />\n                            ZC 12345<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-md-4 p-0\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-123-456-7890</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> info@themusicexchange.com</a>\n                    </div>\n                    <div className=\"col-12 col-md-4 my-4 my-md-0\">\n                        <a className=\"btn btn-social-icon btn-instagram\" href=\"http://instagram.com/\"><i className=\"fa fa-instagram\" /></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/\"><i className=\"fa fa-facebook\" /></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\" /></a>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators ={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />  \n                                    <Errors  \n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}   \n                                    />    \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators ={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors  \n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}   \n                                    />                           \n                                </Col>                        \n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators ={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors  \n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}   \n                                    />              \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators ={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors  \n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}   \n                                    />               \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                            className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\" \n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                    {this.state.isSubmitted ? <p className=\"mt-2 text-success\">Message Sent!</p> : <div></div>}\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Contact;","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/musicians.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/instructors.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/AboutComponent.js",["166"],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/FindMusiciansComponent.js",["167","168","169","170","171","172"],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/shared/items.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/App.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/RenderDirectoryItem.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/HeaderComponent.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/redux/auth.js",[],["173","174"],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/shared/baseUrl.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/reportWebVitals.js",[],{"ruleId":"175","severity":1,"message":"176","line":2,"column":60,"nodeType":"177","messageId":"178","endLine":2,"endColumn":74},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"183"},{"ruleId":"181","replacedBy":"184"},{"ruleId":"175","severity":1,"message":"185","line":2,"column":17,"nodeType":"177","messageId":"178","endLine":2,"endColumn":28},{"ruleId":"186","severity":1,"message":"187","line":79,"column":9,"nodeType":"188","messageId":"189","endLine":79,"endColumn":72},{"ruleId":"190","severity":1,"message":"191","line":152,"column":37,"nodeType":"192","endLine":160,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":176,"column":41,"nodeType":"192","endLine":183,"endColumn":43},{"ruleId":"190","severity":1,"message":"193","line":198,"column":37,"nodeType":"192","endLine":206,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":232,"column":37,"nodeType":"192","endLine":240,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":256,"column":41,"nodeType":"192","endLine":263,"endColumn":43},{"ruleId":"190","severity":1,"message":"191","line":278,"column":37,"nodeType":"192","endLine":286,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":302,"column":37,"nodeType":"192","endLine":309,"endColumn":39},{"ruleId":"190","severity":1,"message":"193","line":324,"column":37,"nodeType":"192","endLine":333,"endColumn":39},{"ruleId":"179","replacedBy":"194"},{"ruleId":"181","replacedBy":"195"},{"ruleId":"186","severity":1,"message":"187","line":67,"column":9,"nodeType":"188","messageId":"189","endLine":67,"endColumn":72},{"ruleId":"190","severity":1,"message":"191","line":118,"column":37,"nodeType":"192","endLine":126,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":142,"column":41,"nodeType":"192","endLine":149,"endColumn":43},{"ruleId":"190","severity":1,"message":"193","line":164,"column":37,"nodeType":"192","endLine":172,"endColumn":39},{"ruleId":"179","replacedBy":"196"},{"ruleId":"181","replacedBy":"197"},{"ruleId":"175","severity":1,"message":"198","line":3,"column":30,"nodeType":"177","messageId":"178","endLine":3,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":56,"column":33,"nodeType":"192","endLine":62,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":66,"column":33,"nodeType":"192","endLine":72,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":76,"column":33,"nodeType":"192","endLine":82,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":86,"column":33,"nodeType":"192","endLine":92,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":96,"column":33,"nodeType":"192","endLine":102,"endColumn":35},{"ruleId":"190","severity":1,"message":"193","line":106,"column":33,"nodeType":"192","endLine":113,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":126,"column":33,"nodeType":"192","endLine":130,"endColumn":35},{"ruleId":"186","severity":1,"message":"199","line":3,"column":1,"nodeType":"188","messageId":"200","endLine":5,"endColumn":7},{"ruleId":"179","replacedBy":"201"},{"ruleId":"181","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":17,"column":33,"nodeType":"192","endLine":17,"endColumn":83},{"ruleId":"175","severity":1,"message":"205","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":87,"column":37,"nodeType":"192","endLine":95,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":112,"column":37,"nodeType":"192","endLine":120,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":137,"column":37,"nodeType":"192","endLine":146,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":164,"column":37,"nodeType":"192","endLine":171,"endColumn":39},{"ruleId":"190","severity":1,"message":"206","line":188,"column":45,"nodeType":"192","endLine":192,"endColumn":47},{"ruleId":"190","severity":1,"message":"207","line":198,"column":37,"nodeType":"192","endLine":199,"endColumn":70},{"ruleId":"190","severity":1,"message":"193","line":208,"column":37,"nodeType":"192","endLine":211,"endColumn":39},{"ruleId":"208","severity":1,"message":"209","line":16,"column":21,"nodeType":"192","endLine":16,"endColumn":75},{"ruleId":"175","severity":1,"message":"198","line":3,"column":30,"nodeType":"177","messageId":"178","endLine":3,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":59,"column":33,"nodeType":"192","endLine":65,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":69,"column":33,"nodeType":"192","endLine":75,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":79,"column":33,"nodeType":"192","endLine":85,"endColumn":35},{"ruleId":"190","severity":1,"message":"193","line":89,"column":33,"nodeType":"192","endLine":96,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":109,"column":33,"nodeType":"192","endLine":113,"endColumn":35},{"ruleId":"179","replacedBy":"210"},{"ruleId":"181","replacedBy":"211"},"no-unused-vars","'CardImgOverlay' is defined but never used.","Identifier","unusedVar","no-native-reassign",["212"],"no-negated-in-lhs",["213"],["212"],["213"],"'ButtonGroup' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["212"],["213"],["212"],["213"],"'Errors' is defined but never used.","Block is redundant.","redundantBlock",["212"],["213"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["212"],["213"],"no-global-assign","no-unsafe-negation"]