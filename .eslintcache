[{"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/App.js":"1","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/FooterComponent.js":"2","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/HeaderComponent.js":"3","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/MainComponent.js":"4","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/HomeComponent.js":"5","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/index.js":"6","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/ContactComponent.js":"7","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/shared/items.js":"8","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/DirectoryComponent.js":"9"},{"size":375,"mtime":1606682654693,"results":"10","hashOfConfig":"11"},{"size":2259,"mtime":1606962243207,"results":"12","hashOfConfig":"11"},{"size":2638,"mtime":1606691831506,"results":"13","hashOfConfig":"11"},{"size":1094,"mtime":1606962403976,"results":"14","hashOfConfig":"11"},{"size":4542,"mtime":1606878246067,"results":"15","hashOfConfig":"11"},{"size":639,"mtime":1606681098300,"results":"16","hashOfConfig":"11"},{"size":10060,"mtime":1606876888225,"results":"17","hashOfConfig":"11"},{"size":958,"mtime":1606963579390,"results":"18","hashOfConfig":"11"},{"size":1162,"mtime":1606963740458,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3ms1k9",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/App.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/FooterComponent.js",["40"],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/HeaderComponent.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/MainComponent.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/HomeComponent.js",[],["41","42"],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/index.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/ContactComponent.js",["43"],"import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    validate(firstName, lastName, phoneNum, email) {\n\n        const errors = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: ''\n        };\n\n        if (this.state.touched.firstName) {\n            if (firstName.length < 2) {\n                errors.firstName = 'First name must be at least 2 characters.';\n            } else if (firstName.length > 15) {\n                errors.firstName = 'First name must be 15 or less characters.';\n            }\n        }\n\n        if (this.state.touched.lastName) {\n            if (lastName.length < 2) {\n                errors.lastName = 'Last name must be at least 2 characters.';\n            } else if (lastName.length > 15) {\n                errors.lastName = 'Last name must be 15 or less characters.';\n            }\n        }\n\n        const reg = /^\\d+$/;\n        if (this.state.touched.phoneNum && !reg.test(phoneNum)) {\n            errors.phoneNum = 'The phone number should contain only numbers.';\n        }\n\n        if (this.state.touched.email && !email.includes('@')) {\n            errors.email = 'Email should containa @';\n        }\n\n        return errors;\n\n    }\n\n    handleBlur = (field) => () => {\n        this.setState({\n            touched: {...this.state.touched, [field]: true}\n        });\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const name = target.name;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        console.log(\"Current state is: \" + JSON.stringify(this.state));\n        alert(\"Current state is: \" + JSON.stringify(this.state));\n        event.preventDefault();\n    }\n\n    render() {\n\n\n        const errors = this.validate(this.state.firstName, this.state.lastName, this.state.phoneNum, this.state.email);\n\n        return (\n            <div className=\"container\" id=\"contact-container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-12 col-md-4 \">\n                        <h5>Our Address</h5>\n                        <address>\n                            Some Street<br />\n                            Some Town<br />\n                            ZC 12345<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-md-4 p-0\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-123-456-7890</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> info@themusicexchange.com</a>\n                    </div>\n                    <div className=\"col-12 col-md-4 my-4 my-md-0\">\n                        <a className=\"btn btn-social-icon btn-instagram\" href=\"http://instagram.com/\"><i className=\"fa fa-instagram\" /></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/\"><i className=\"fa fa-facebook\" /></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\" /></a>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        value={this.state.firstName}\n                                        invalid={errors.firstName}\n                                        onBlur={this.handleBlur(\"firstName\")}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.firstName}</FormFeedback>    \n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        value={this.state.lastName}\n                                        invalid={errors.lastName}\n                                        onBlur={this.handleBlur(\"lastName\")}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.lastName}</FormFeedback>  \n                                </Col>                        \n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Input type=\"tel\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        value={this.state.phoneNum}\n                                        invalid={errors.phoneNum}\n                                        onBlur={this.handleBlur(\"phoneNum\")}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.phoneNum}</FormFeedback> \n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        invalid={errors.email}\n                                        onBlur={this.handleBlur(\"email\")}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.email}</FormFeedback> \n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 4, offset: 2}}>\n                                    <FormGroup check>\n                                        <Label check>\n                                            <Input type=\"checkbox\"\n                                                name=\"agree\"\n                                                checked={this.state.agree}\n                                                onChange={this.handleInputChange} /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </FormGroup>\n                                </Col>\n                                <Col md={4}>\n                                    <Input type=\"select\" name=\"contactType\"\n                                            value={this.state.contactType}\n                                            onChange={this.handleInputChange}>\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Input type=\"textarea\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        value={this.state.feedback}\n                                        onChange={this.handleInputChange}></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Contact;","/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/shared/items.js",[],"/Users/alasdairselmes/Desktop/NucampFolder/3-React/themusicexchange/src/components/DirectoryComponent.js",[],{"ruleId":"44","severity":1,"message":"45","line":17,"column":33,"nodeType":"46","endLine":17,"endColumn":83},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":3,"column":10,"nodeType":"53","messageId":"54","endLine":3,"endColumn":14},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]